// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScheduleBTEC.Context;

#nullable disable

namespace ScheduleBTEC.Migrations
{
    [DbContext(typeof(ConnectDB))]
    [Migration("20240418012620_Indix")]
    partial class Indix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScheduleBTEC.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("AttendanceId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.ClassEntity", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("className")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassId");

                    b.ToTable("ClassEntities");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Learn", b =>
                {
                    b.Property<int>("LearnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LearnId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("LearnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeachId")
                        .HasColumnType("int");

                    b.HasKey("LearnId");

                    b.HasIndex("ClassId");

                    b.HasIndex("TeachId");

                    b.ToTable("Learns");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<DateTime>("DateLearn")
                        .HasColumnType("datetime2");

                    b.Property<int>("LearnId")
                        .HasColumnType("int");

                    b.Property<string>("timelearn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleId");

                    b.HasIndex("LearnId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Study", b =>
                {
                    b.Property<int>("StudyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudyId"));

                    b.Property<int>("LearnId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StudyId");

                    b.HasIndex("LearnId");

                    b.HasIndex("UserId");

                    b.ToTable("Studys");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Teach", b =>
                {
                    b.Property<int>("TeachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeachId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TeachId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Teaches");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Attendance", b =>
                {
                    b.HasOne("ScheduleBTEC.Models.Schedule", "Schedule")
                        .WithMany("Attendances")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScheduleBTEC.Models.Users", "Users")
                        .WithMany("Attendances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Learn", b =>
                {
                    b.HasOne("ScheduleBTEC.Models.ClassEntity", "ClassEntity")
                        .WithMany("Learns")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScheduleBTEC.Models.Teach", "Teach")
                        .WithMany("Learns")
                        .HasForeignKey("TeachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassEntity");

                    b.Navigation("Teach");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Schedule", b =>
                {
                    b.HasOne("ScheduleBTEC.Models.Learn", "Learn")
                        .WithMany("Schedules")
                        .HasForeignKey("LearnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Learn");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Study", b =>
                {
                    b.HasOne("ScheduleBTEC.Models.Learn", "Learn")
                        .WithMany("Study")
                        .HasForeignKey("LearnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScheduleBTEC.Models.Users", "Users")
                        .WithMany("Study")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Learn");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Teach", b =>
                {
                    b.HasOne("ScheduleBTEC.Models.Course", "Course")
                        .WithMany("Teachs")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScheduleBTEC.Models.Users", "Users")
                        .WithMany("Teachs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.ClassEntity", b =>
                {
                    b.Navigation("Learns");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Course", b =>
                {
                    b.Navigation("Teachs");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Learn", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("Study");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Schedule", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Teach", b =>
                {
                    b.Navigation("Learns");
                });

            modelBuilder.Entity("ScheduleBTEC.Models.Users", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Study");

                    b.Navigation("Teachs");
                });
#pragma warning restore 612, 618
        }
    }
}
